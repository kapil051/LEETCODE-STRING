Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

 

Example 1:

Input: haystack = "sadbutsad", needle = "sad"
Output: 0

Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.
Example 2:

Input: haystack = "leetcode", needle = "leeto"
Output: -1
Explanation: "leeto" did not occur in "leetcode", so we return -1.
 

Constraints:

1 <= haystack.length, needle.length <= 104
haystack and needle consist of only lowercase English characters.


**************************************************************************************************************************************************************
class Solution {
public:
    
    bool check(string &nums1,string &nums2,int start){
        
               int j=0;
        
        for(int i=start;i<nums1.size();i++){
            
            if(j>=nums2.size()) break;
            
            if(nums1[i]!=nums2[j++]) return false;
        }
        
          if(j<nums2.size()) return false;
        
          return true;
        
    }
    
    int strStr(string nums1, string nums2) {
     
        for(int i=0;i<nums1.size();i++){
            
            if(nums1[i]==nums2[0]){
                if(check(nums1,nums2,i)) return i;
            }
            
        }
      return -1;
    }
};
